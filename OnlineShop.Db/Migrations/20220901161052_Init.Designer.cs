// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Db;

namespace OnlineShop.Db.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220901161052_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineShop.Db.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Favorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10eceba0-9aa9-4b53-826d-eba4e1cff211"),
                            Cost = 640,
                            Description = "Desc1",
                            ImagePath = "/images/1.jpg",
                            Name = "Алишань Гао Шань Ча"
                        },
                        new
                        {
                            Id = new Guid("d4bfa10c-f2e6-4bd3-86a8-26f45ef98cff"),
                            Cost = 604,
                            Description = "Desc2",
                            ImagePath = "/images/2.jpg",
                            Name = "Алишань Улун"
                        },
                        new
                        {
                            Id = new Guid("c02ada35-d016-40fe-bd15-dd422e4e4b5c"),
                            Cost = 550,
                            Description = "Desc3",
                            ImagePath = "/images/3.jpg",
                            Name = "Габа «Аметист»"
                        },
                        new
                        {
                            Id = new Guid("e4fd0f01-c8b3-40c0-aece-0426e887979c"),
                            Cost = 415,
                            Description = "Desc4",
                            ImagePath = "/images/4.jpg",
                            Name = "Габа «Янтарь»"
                        },
                        new
                        {
                            Id = new Guid("90ba32b3-dde7-4827-ad2f-f2304d0d18a6"),
                            Cost = 700,
                            Description = "Desc4",
                            ImagePath = "/images/5.jpg",
                            Name = "Дун Дин Нун Сян"
                        },
                        new
                        {
                            Id = new Guid("2a0898cd-4bf0-4483-8e8e-836a6fd14bcc"),
                            Cost = 631,
                            Description = "Desc4",
                            ImagePath = "/images/6.jpg",
                            Name = "Дун Фан Мэй Жень"
                        },
                        new
                        {
                            Id = new Guid("4b2ad65d-c275-44a5-82af-248545066186"),
                            Cost = 535,
                            Description = "Desc4",
                            ImagePath = "/images/7.jpg",
                            Name = "Жень Шень А"
                        },
                        new
                        {
                            Id = new Guid("f84f9f97-a043-42b4-8402-bbadf8332b4b"),
                            Cost = 480,
                            Description = "Desc4",
                            ImagePath = "/images/8.jpg",
                            Name = "Лао Ча Ван"
                        },
                        new
                        {
                            Id = new Guid("77aeb719-8428-4097-9060-4e6bcf733c8b"),
                            Cost = 590,
                            Description = "Desc4",
                            ImagePath = "/images/9.jpg",
                            Name = "Най Сян Цзинь "
                        },
                        new
                        {
                            Id = new Guid("30c86f26-089c-42c2-8e48-bcbe6b364e57"),
                            Cost = 720,
                            Description = "Desc4",
                            ImagePath = "/images/10.jpg",
                            Name = "Те Гуанинь Гандэ"
                        },
                        new
                        {
                            Id = new Guid("f2867383-d88d-4f8a-b920-622e5d2690e9"),
                            Cost = 485,
                            Description = "Desc4",
                            ImagePath = "/images/11.jpg",
                            Name = "Хуан Мей"
                        },
                        new
                        {
                            Id = new Guid("ee39275f-6a62-4f51-a7ae-d2ee470da52d"),
                            Cost = 515,
                            Description = "Desc4",
                            ImagePath = "/images/12.jpg",
                            Name = "Ми Лань Сян"
                        });
                });

            modelBuilder.Entity("OnlineShop.Db.Models.UserDeliveryInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserDeliveryInfo");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.CartItem", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineShop.Db.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("OnlineShop.Db.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Favorite", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.Product", "Product")
                        .WithMany("Favorite")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Order", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.UserDeliveryInfo", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Favorite");
                });
#pragma warning restore 612, 618
        }
    }
}
